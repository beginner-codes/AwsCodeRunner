// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CodeRunnerStack matches snapshot 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CodeRunnerLambdaConstructAccessKeySecretDBE31269": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              "CodeRunnerInvocationAccessKeyId",
              {
                "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaAccessKey3EFBA665",
              },
            ],
          ],
        },
        "SecretString": {
          "Fn::GetAtt": [
            "CodeRunnerLambdaConstructCodeRunnerLambdaAccessKey3EFBA665",
            "SecretAccessKey",
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambda1B9774BA": {
      "DependsOn": [
        "CodeRunnerLambdaConstructCodeRunnerLambdaServiceRole3FF74FA3",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1DefaultRoute6AF29E3F",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1RouteTableAssociation4490A90B",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2DefaultRoute145E4218",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2RouteTableAssociation42AF5F97",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e34bb70fc03d63b4e4403f7bb966e9d56f8e650b80329d7cba34d5fe03ae8a10.zip",
        },
        "Description": "3735afd273444d8d0a557abce0a67ef41735abe16fa6a4af4530306f1068be94",
        "FunctionName": "CodeRunnerLambda",
        "Handler": "main.run",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CodeRunnerLambdaConstructCodeRunnerLambdaServiceRole3FF74FA3",
            "Arn",
          ],
        },
        "Runtime": "python3.12",
        "Timeout": 3,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "CodeRunnerLambdaConstructCodeRunnerLambdaSecurityGroup4BD85287",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": [
            {
              "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1SubnetE4CD332C",
            },
            {
              "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2SubnetA0E6BBB2",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaAccessKey3EFBA665": {
      "Properties": {
        "UserName": {
          "Ref": "CodeRunnerLambdaConstructInvocationUserF6FCFF9E",
        },
      },
      "Type": "AWS::IAM::AccessKey",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaAliaslive4D93CA56": {
      "DependsOn": [
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1DefaultRoute6AF29E3F",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1RouteTableAssociation4490A90B",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2DefaultRoute145E4218",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2RouteTableAssociation42AF5F97",
      ],
      "Properties": {
        "FunctionName": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambda1B9774BA",
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "CodeRunnerLambdaConstructCodeRunnerLambdaCurrentVersionF77F62061a0867628ada27cd304785a540d8f96a",
            "Version",
          ],
        },
        "Name": "live",
        "ProvisionedConcurrencyConfig": {
          "ProvisionedConcurrentExecutions": 1,
        },
      },
      "Type": "AWS::Lambda::Alias",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaCurrentVersionF77F62061a0867628ada27cd304785a540d8f96a": {
      "DependsOn": [
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1DefaultRoute6AF29E3F",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1RouteTableAssociation4490A90B",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2DefaultRoute145E4218",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2RouteTableAssociation42AF5F97",
      ],
      "Properties": {
        "FunctionName": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambda1B9774BA",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaSecurityGroup4BD85287": {
      "DependsOn": [
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1DefaultRoute6AF29E3F",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1RouteTableAssociation4490A90B",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2DefaultRoute145E4218",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2RouteTableAssociation42AF5F97",
      ],
      "Properties": {
        "GroupDescription": "Automatic security group for Lambda Function MyTestStackCodeRunnerLambdaConstructCodeRunnerLambdaB30127DB",
        "SecurityGroupEgress": [
          {
            "CidrIp": "255.255.255.255/32",
            "Description": "Disallow all traffic",
            "FromPort": 252,
            "IpProtocol": "icmp",
            "ToPort": 86,
          },
        ],
        "VpcId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaServiceRole3FF74FA3": {
      "DependsOn": [
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1DefaultRoute6AF29E3F",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1RouteTableAssociation4490A90B",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2DefaultRoute145E4218",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2RouteTableAssociation42AF5F97",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcIGWD1124BFC": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1DefaultRoute6AF29E3F": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1NATGateway24639D47",
        },
        "RouteTableId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1RouteTable9D679F35",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1RouteTable9D679F35": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1RouteTableAssociation4490A90B": {
      "Properties": {
        "RouteTableId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1RouteTable9D679F35",
        },
        "SubnetId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1SubnetE4CD332C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet1SubnetE4CD332C": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2DefaultRoute145E4218": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2NATGateway5296E8B1",
        },
        "RouteTableId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2RouteTable1D72EF31",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2RouteTable1D72EF31": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2RouteTableAssociation42AF5F97": {
      "Properties": {
        "RouteTableId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2RouteTable1D72EF31",
        },
        "SubnetId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2SubnetA0E6BBB2",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPrivateSubnet2SubnetA0E6BBB2": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1DefaultRoute1B93415D": {
      "DependsOn": [
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcVPCGW7B499723",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcIGWD1124BFC",
        },
        "RouteTableId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1RouteTable915E77D5",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1EIP258DAD7B": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1NATGateway24639D47": {
      "DependsOn": [
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1DefaultRoute1B93415D",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1RouteTableAssociationBABA78DD",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1EIP258DAD7B",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1Subnet3EADA313",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1RouteTable915E77D5": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1RouteTableAssociationBABA78DD": {
      "Properties": {
        "RouteTableId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1RouteTable915E77D5",
        },
        "SubnetId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1Subnet3EADA313",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet1Subnet3EADA313": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2DefaultRoute3DBCCDA4": {
      "DependsOn": [
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcVPCGW7B499723",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcIGWD1124BFC",
        },
        "RouteTableId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2RouteTable3972B96F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2EIP1CA7F968": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2NATGateway5296E8B1": {
      "DependsOn": [
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2DefaultRoute3DBCCDA4",
        "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2RouteTableAssociationABFB5F7E",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2EIP1CA7F968",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2Subnet919CF6CC",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2RouteTable3972B96F": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2RouteTableAssociationABFB5F7E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2RouteTable3972B96F",
        },
        "SubnetId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2Subnet919CF6CC",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcPublicSubnet2Subnet919CF6CC": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "MyTestStack/CodeRunnerLambdaConstruct/CodeRunnerLambdaVpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "CodeRunnerLambdaConstructCodeRunnerLambdaVpcVPCGW7B499723": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpcIGWD1124BFC",
        },
        "VpcId": {
          "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaVpc2213FFDC",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "CodeRunnerLambdaConstructInvocationUserDefaultPolicy21F002BC": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Ref": "CodeRunnerLambdaConstructCodeRunnerLambdaAliaslive4D93CA56",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodeRunnerLambdaConstructInvocationUserDefaultPolicy21F002BC",
        "Users": [
          {
            "Ref": "CodeRunnerLambdaConstructInvocationUserF6FCFF9E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodeRunnerLambdaConstructInvocationUserF6FCFF9E": {
      "Type": "AWS::IAM::User",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
